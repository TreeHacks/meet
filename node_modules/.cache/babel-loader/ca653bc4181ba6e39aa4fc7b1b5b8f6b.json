{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.toErrorList = toErrorList;\nexports[\"default\"] = validateFormData;\nexports.isValid = isValid;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _objectSpread6 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _getIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/get-iterator\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/array/is-array\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _ajv = _interopRequireDefault(require(\"ajv\"));\n\nvar _utils = require(\"./utils\");\n\nvar ajv = createAjvInstance();\nvar formerCustomFormats = null;\nvar formerMetaSchema = null;\n\nfunction createAjvInstance() {\n  var ajv = new _ajv[\"default\"]({\n    errorDataPath: \"property\",\n    allErrors: true,\n    multipleOfPrecision: 8,\n    schemaId: \"auto\",\n    unknownFormats: \"ignore\"\n  }); // add custom formats\n\n  ajv.addFormat(\"data-url\", /^data:([a-z]+\\/[a-z0-9-+.]+)?;(?:name=(.*);)?base64,(.*)$/);\n  ajv.addFormat(\"color\", /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/);\n  return ajv;\n}\n\nfunction toErrorSchema(errors) {\n  // Transforms a ajv validation errors list:\n  // [\n  //   {property: \".level1.level2[2].level3\", message: \"err a\"},\n  //   {property: \".level1.level2[2].level3\", message: \"err b\"},\n  //   {property: \".level1.level2[4].level3\", message: \"err b\"},\n  // ]\n  // Into an error tree:\n  // {\n  //   level1: {\n  //     level2: {\n  //       2: {level3: {errors: [\"err a\", \"err b\"]}},\n  //       4: {level3: {errors: [\"err b\"]}},\n  //     }\n  //   }\n  // };\n  if (!errors.length) {\n    return {};\n  }\n\n  return errors.reduce(function (errorSchema, error) {\n    var property = error.property,\n        message = error.message;\n    var path = (0, _toPath[\"default\"])(property);\n    var parent = errorSchema; // If the property is at the root (.level1) then toPath creates\n    // an empty array element at the first index. Remove it.\n\n    if (path.length > 0 && path[0] === \"\") {\n      path.splice(0, 1);\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = (0, _getIterator2[\"default\"])(path.slice(0)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var segment = _step.value;\n\n        if (!(segment in parent)) {\n          parent[segment] = {};\n        }\n\n        parent = parent[segment];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if ((0, _isArray[\"default\"])(parent.__errors)) {\n      // We store the list of errors for this node in a property named __errors\n      // to avoid name collision with a possible sub schema field named\n      // \"errors\" (see `validate.createErrorHandler`).\n      parent.__errors = parent.__errors.concat(message);\n    } else {\n      if (message) {\n        parent.__errors = [message];\n      }\n    }\n\n    return errorSchema;\n  }, {});\n}\n\nfunction toErrorList(errorSchema) {\n  var fieldName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"root\"; // XXX: We should transform fieldName as a full field path string.\n\n  var errorList = [];\n\n  if (\"__errors\" in errorSchema) {\n    errorList = errorList.concat(errorSchema.__errors.map(function (stack) {\n      return {\n        stack: \"\".concat(fieldName, \": \").concat(stack)\n      };\n    }));\n  }\n\n  return (0, _keys[\"default\"])(errorSchema).reduce(function (acc, key) {\n    if (key !== \"__errors\") {\n      acc = acc.concat(toErrorList(errorSchema[key], key));\n    }\n\n    return acc;\n  }, errorList);\n}\n\nfunction createErrorHandler(formData) {\n  var handler = {\n    // We store the list of errors for this node in a property named __errors\n    // to avoid name collision with a possible sub schema field named\n    // \"errors\" (see `utils.toErrorSchema`).\n    __errors: [],\n    addError: function addError(message) {\n      this.__errors.push(message);\n    }\n  };\n\n  if ((0, _utils.isObject)(formData)) {\n    return (0, _keys[\"default\"])(formData).reduce(function (acc, key) {\n      return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, createErrorHandler(formData[key])));\n    }, handler);\n  }\n\n  if ((0, _isArray[\"default\"])(formData)) {\n    return formData.reduce(function (acc, value, key) {\n      return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, createErrorHandler(value)));\n    }, handler);\n  }\n\n  return handler;\n}\n\nfunction unwrapErrorHandler(errorHandler) {\n  return (0, _keys[\"default\"])(errorHandler).reduce(function (acc, key) {\n    if (key === \"addError\") {\n      return acc;\n    } else if (key === \"__errors\") {\n      return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, errorHandler[key]));\n    }\n\n    return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, unwrapErrorHandler(errorHandler[key])));\n  }, {});\n}\n/**\n * Transforming the error output from ajv to format used by jsonschema.\n * At some point, components should be updated to support ajv.\n */\n\n\nfunction transformAjvErrors() {\n  var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  if (errors === null) {\n    return [];\n  }\n\n  return errors.map(function (e) {\n    var dataPath = e.dataPath,\n        keyword = e.keyword,\n        message = e.message,\n        params = e.params,\n        schemaPath = e.schemaPath;\n    var property = \"\".concat(dataPath); // put data in expected format\n\n    return {\n      name: keyword,\n      property: property,\n      message: message,\n      params: params,\n      // specific to ajv\n      stack: \"\".concat(property, \" \").concat(message).trim(),\n      schemaPath: schemaPath\n    };\n  });\n}\n/**\n * This function processes the formData with a user `validate` contributed\n * function, which receives the form data and an `errorHandler` object that\n * will be used to add custom validation errors for each field.\n */\n\n\nfunction validateFormData(formData, schema, customValidate, transformErrors) {\n  var additionalMetaSchemas = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var customFormats = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {}; // Include form data with undefined values, which is required for validation.\n\n  var definitions = schema.definitions;\n  formData = (0, _utils.getDefaultFormState)(schema, formData, definitions, true);\n  var newMetaSchemas = !(0, _utils.deepEquals)(formerMetaSchema, additionalMetaSchemas);\n  var newFormats = !(0, _utils.deepEquals)(formerCustomFormats, customFormats);\n\n  if (newMetaSchemas || newFormats) {\n    ajv = createAjvInstance();\n  } // add more schemas to validate against\n\n\n  if (additionalMetaSchemas && newMetaSchemas && (0, _isArray[\"default\"])(additionalMetaSchemas)) {\n    ajv.addMetaSchema(additionalMetaSchemas);\n    formerMetaSchema = additionalMetaSchemas;\n  } // add more custom formats to validate against\n\n\n  if (customFormats && newFormats && (0, _utils.isObject)(customFormats)) {\n    (0, _keys[\"default\"])(customFormats).forEach(function (formatName) {\n      ajv.addFormat(formatName, customFormats[formatName]);\n    });\n    formerCustomFormats = customFormats;\n  }\n\n  var validationError = null;\n\n  try {\n    ajv.validate(schema, formData);\n  } catch (err) {\n    validationError = err;\n  }\n\n  var errors = transformAjvErrors(ajv.errors); // Clear errors to prevent persistent errors, see #1104\n\n  ajv.errors = null;\n  var noProperMetaSchema = validationError && validationError.message && typeof validationError.message === \"string\" && validationError.message.includes(\"no schema with key or ref \");\n\n  if (noProperMetaSchema) {\n    errors = [].concat((0, _toConsumableArray2[\"default\"])(errors), [{\n      stack: validationError.message\n    }]);\n  }\n\n  if (typeof transformErrors === \"function\") {\n    errors = transformErrors(errors);\n  }\n\n  var errorSchema = toErrorSchema(errors);\n\n  if (noProperMetaSchema) {\n    errorSchema = (0, _objectSpread6[\"default\"])({}, errorSchema, {\n      $schema: {\n        __errors: [validationError.message]\n      }\n    });\n  }\n\n  if (typeof customValidate !== \"function\") {\n    return {\n      errors: errors,\n      errorSchema: errorSchema\n    };\n  }\n\n  var errorHandler = customValidate(formData, createErrorHandler(formData));\n  var userErrorSchema = unwrapErrorHandler(errorHandler);\n  var newErrorSchema = (0, _utils.mergeObjects)(errorSchema, userErrorSchema, true); // XXX: The errors list produced is not fully compliant with the format\n  // exposed by the jsonschema lib, which contains full field paths and other\n  // properties.\n\n  var newErrors = toErrorList(newErrorSchema);\n  return {\n    errors: newErrors,\n    errorSchema: newErrorSchema\n  };\n}\n/**\n * Validates data against a schema, returning true if the data is valid, or\n * false otherwise. If the schema is invalid, then this function will return\n * false.\n */\n\n\nfunction isValid(schema, data) {\n  try {\n    return ajv.validate(schema, data);\n  } catch (e) {\n    return false;\n  }\n}","map":{"version":3,"sources":["/Users/lucaspauker/projects/treehacks/meet/node_modules/react-jsonschema-form/lib/validate.js"],"names":["_interopRequireDefault","require","_Object$defineProperty","exports","value","toErrorList","validateFormData","isValid","_toConsumableArray2","_defineProperty2","_objectSpread6","_keys","_getIterator2","_isArray","_toPath","_ajv","_utils","ajv","createAjvInstance","formerCustomFormats","formerMetaSchema","errorDataPath","allErrors","multipleOfPrecision","schemaId","unknownFormats","addFormat","toErrorSchema","errors","length","reduce","errorSchema","error","property","message","path","parent","splice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","slice","_step","next","done","segment","err","__errors","concat","fieldName","arguments","errorList","map","stack","acc","key","createErrorHandler","formData","handler","addError","push","isObject","unwrapErrorHandler","errorHandler","transformAjvErrors","e","dataPath","keyword","params","schemaPath","name","trim","schema","customValidate","transformErrors","additionalMetaSchemas","customFormats","definitions","getDefaultFormState","newMetaSchemas","deepEquals","newFormats","addMetaSchema","forEach","formatName","validationError","validate","noProperMetaSchema","includes","$schema","userErrorSchema","newErrorSchema","mergeObjects","newErrors","data"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.toErrorList = toErrorList;\nexports[\"default\"] = validateFormData;\nexports.isValid = isValid;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _objectSpread6 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _getIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/get-iterator\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/array/is-array\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _ajv = _interopRequireDefault(require(\"ajv\"));\n\nvar _utils = require(\"./utils\");\n\nvar ajv = createAjvInstance();\nvar formerCustomFormats = null;\nvar formerMetaSchema = null;\n\nfunction createAjvInstance() {\n  var ajv = new _ajv[\"default\"]({\n    errorDataPath: \"property\",\n    allErrors: true,\n    multipleOfPrecision: 8,\n    schemaId: \"auto\",\n    unknownFormats: \"ignore\"\n  }); // add custom formats\n\n  ajv.addFormat(\"data-url\", /^data:([a-z]+\\/[a-z0-9-+.]+)?;(?:name=(.*);)?base64,(.*)$/);\n  ajv.addFormat(\"color\", /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/);\n  return ajv;\n}\n\nfunction toErrorSchema(errors) {\n  // Transforms a ajv validation errors list:\n  // [\n  //   {property: \".level1.level2[2].level3\", message: \"err a\"},\n  //   {property: \".level1.level2[2].level3\", message: \"err b\"},\n  //   {property: \".level1.level2[4].level3\", message: \"err b\"},\n  // ]\n  // Into an error tree:\n  // {\n  //   level1: {\n  //     level2: {\n  //       2: {level3: {errors: [\"err a\", \"err b\"]}},\n  //       4: {level3: {errors: [\"err b\"]}},\n  //     }\n  //   }\n  // };\n  if (!errors.length) {\n    return {};\n  }\n\n  return errors.reduce(function (errorSchema, error) {\n    var property = error.property,\n        message = error.message;\n    var path = (0, _toPath[\"default\"])(property);\n    var parent = errorSchema; // If the property is at the root (.level1) then toPath creates\n    // an empty array element at the first index. Remove it.\n\n    if (path.length > 0 && path[0] === \"\") {\n      path.splice(0, 1);\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = (0, _getIterator2[\"default\"])(path.slice(0)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var segment = _step.value;\n\n        if (!(segment in parent)) {\n          parent[segment] = {};\n        }\n\n        parent = parent[segment];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if ((0, _isArray[\"default\"])(parent.__errors)) {\n      // We store the list of errors for this node in a property named __errors\n      // to avoid name collision with a possible sub schema field named\n      // \"errors\" (see `validate.createErrorHandler`).\n      parent.__errors = parent.__errors.concat(message);\n    } else {\n      if (message) {\n        parent.__errors = [message];\n      }\n    }\n\n    return errorSchema;\n  }, {});\n}\n\nfunction toErrorList(errorSchema) {\n  var fieldName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"root\";\n  // XXX: We should transform fieldName as a full field path string.\n  var errorList = [];\n\n  if (\"__errors\" in errorSchema) {\n    errorList = errorList.concat(errorSchema.__errors.map(function (stack) {\n      return {\n        stack: \"\".concat(fieldName, \": \").concat(stack)\n      };\n    }));\n  }\n\n  return (0, _keys[\"default\"])(errorSchema).reduce(function (acc, key) {\n    if (key !== \"__errors\") {\n      acc = acc.concat(toErrorList(errorSchema[key], key));\n    }\n\n    return acc;\n  }, errorList);\n}\n\nfunction createErrorHandler(formData) {\n  var handler = {\n    // We store the list of errors for this node in a property named __errors\n    // to avoid name collision with a possible sub schema field named\n    // \"errors\" (see `utils.toErrorSchema`).\n    __errors: [],\n    addError: function addError(message) {\n      this.__errors.push(message);\n    }\n  };\n\n  if ((0, _utils.isObject)(formData)) {\n    return (0, _keys[\"default\"])(formData).reduce(function (acc, key) {\n      return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, createErrorHandler(formData[key])));\n    }, handler);\n  }\n\n  if ((0, _isArray[\"default\"])(formData)) {\n    return formData.reduce(function (acc, value, key) {\n      return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, createErrorHandler(value)));\n    }, handler);\n  }\n\n  return handler;\n}\n\nfunction unwrapErrorHandler(errorHandler) {\n  return (0, _keys[\"default\"])(errorHandler).reduce(function (acc, key) {\n    if (key === \"addError\") {\n      return acc;\n    } else if (key === \"__errors\") {\n      return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, errorHandler[key]));\n    }\n\n    return (0, _objectSpread6[\"default\"])({}, acc, (0, _defineProperty2[\"default\"])({}, key, unwrapErrorHandler(errorHandler[key])));\n  }, {});\n}\n/**\n * Transforming the error output from ajv to format used by jsonschema.\n * At some point, components should be updated to support ajv.\n */\n\n\nfunction transformAjvErrors() {\n  var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  if (errors === null) {\n    return [];\n  }\n\n  return errors.map(function (e) {\n    var dataPath = e.dataPath,\n        keyword = e.keyword,\n        message = e.message,\n        params = e.params,\n        schemaPath = e.schemaPath;\n    var property = \"\".concat(dataPath); // put data in expected format\n\n    return {\n      name: keyword,\n      property: property,\n      message: message,\n      params: params,\n      // specific to ajv\n      stack: \"\".concat(property, \" \").concat(message).trim(),\n      schemaPath: schemaPath\n    };\n  });\n}\n/**\n * This function processes the formData with a user `validate` contributed\n * function, which receives the form data and an `errorHandler` object that\n * will be used to add custom validation errors for each field.\n */\n\n\nfunction validateFormData(formData, schema, customValidate, transformErrors) {\n  var additionalMetaSchemas = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var customFormats = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  // Include form data with undefined values, which is required for validation.\n  var definitions = schema.definitions;\n  formData = (0, _utils.getDefaultFormState)(schema, formData, definitions, true);\n  var newMetaSchemas = !(0, _utils.deepEquals)(formerMetaSchema, additionalMetaSchemas);\n  var newFormats = !(0, _utils.deepEquals)(formerCustomFormats, customFormats);\n\n  if (newMetaSchemas || newFormats) {\n    ajv = createAjvInstance();\n  } // add more schemas to validate against\n\n\n  if (additionalMetaSchemas && newMetaSchemas && (0, _isArray[\"default\"])(additionalMetaSchemas)) {\n    ajv.addMetaSchema(additionalMetaSchemas);\n    formerMetaSchema = additionalMetaSchemas;\n  } // add more custom formats to validate against\n\n\n  if (customFormats && newFormats && (0, _utils.isObject)(customFormats)) {\n    (0, _keys[\"default\"])(customFormats).forEach(function (formatName) {\n      ajv.addFormat(formatName, customFormats[formatName]);\n    });\n    formerCustomFormats = customFormats;\n  }\n\n  var validationError = null;\n\n  try {\n    ajv.validate(schema, formData);\n  } catch (err) {\n    validationError = err;\n  }\n\n  var errors = transformAjvErrors(ajv.errors); // Clear errors to prevent persistent errors, see #1104\n\n  ajv.errors = null;\n  var noProperMetaSchema = validationError && validationError.message && typeof validationError.message === \"string\" && validationError.message.includes(\"no schema with key or ref \");\n\n  if (noProperMetaSchema) {\n    errors = [].concat((0, _toConsumableArray2[\"default\"])(errors), [{\n      stack: validationError.message\n    }]);\n  }\n\n  if (typeof transformErrors === \"function\") {\n    errors = transformErrors(errors);\n  }\n\n  var errorSchema = toErrorSchema(errors);\n\n  if (noProperMetaSchema) {\n    errorSchema = (0, _objectSpread6[\"default\"])({}, errorSchema, {\n      $schema: {\n        __errors: [validationError.message]\n      }\n    });\n  }\n\n  if (typeof customValidate !== \"function\") {\n    return {\n      errors: errors,\n      errorSchema: errorSchema\n    };\n  }\n\n  var errorHandler = customValidate(formData, createErrorHandler(formData));\n  var userErrorSchema = unwrapErrorHandler(errorHandler);\n  var newErrorSchema = (0, _utils.mergeObjects)(errorSchema, userErrorSchema, true); // XXX: The errors list produced is not fully compliant with the format\n  // exposed by the jsonschema lib, which contains full field paths and other\n  // properties.\n\n  var newErrors = toErrorList(newErrorSchema);\n  return {\n    errors: newErrors,\n    errorSchema: newErrorSchema\n  };\n}\n/**\n * Validates data against a schema, returning true if the data is valid, or\n * false otherwise. If the schema is invalid, then this function will return\n * false.\n */\n\n\nfunction isValid(schema, data) {\n  try {\n    return ajv.validate(schema, data);\n  } catch (e) {\n    return false;\n  }\n}"]},"metadata":{},"sourceType":"script"}