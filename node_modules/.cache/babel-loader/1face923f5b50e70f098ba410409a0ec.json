{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction getAccessibilityStatus(props) {\n  var a11yNumResults = props.a11yNumResults,\n      a11yNumSelected = props.a11yNumSelected,\n      emptyLabel = props.emptyLabel,\n      isMenuShown = props.isMenuShown,\n      results = props.results,\n      selected = props.selected; // If the menu is hidden, display info about the number of selections.\n\n  if (!isMenuShown) {\n    return a11yNumSelected(selected);\n  } // Display info about the number of matches.\n\n\n  if (results.length === 0) {\n    return emptyLabel;\n  }\n\n  return a11yNumResults(results);\n}\n\nvar _default = getAccessibilityStatus;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/lucaspauker/projects/treehacks/meet/node_modules/react-bootstrap-typeahead/lib/utils/getAccessibilityStatus.js"],"names":["Object","defineProperty","exports","value","getAccessibilityStatus","props","a11yNumResults","a11yNumSelected","emptyLabel","isMenuShown","results","selected","length","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,SAASE,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,MAAIC,cAAc,GAAGD,KAAK,CAACC,cAA3B;AAAA,MACIC,eAAe,GAAGF,KAAK,CAACE,eAD5B;AAAA,MAEIC,UAAU,GAAGH,KAAK,CAACG,UAFvB;AAAA,MAGIC,WAAW,GAAGJ,KAAK,CAACI,WAHxB;AAAA,MAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;AAAA,MAKIC,QAAQ,GAAGN,KAAK,CAACM,QALrB,CADqC,CAMN;;AAE/B,MAAI,CAACF,WAAL,EAAkB;AAChB,WAAOF,eAAe,CAACI,QAAD,CAAtB;AACD,GAVoC,CAUnC;;;AAGF,MAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAOJ,UAAP;AACD;;AAED,SAAOF,cAAc,CAACI,OAAD,CAArB;AACD;;AAED,IAAIG,QAAQ,GAAGT,sBAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBW,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction getAccessibilityStatus(props) {\n  var a11yNumResults = props.a11yNumResults,\n      a11yNumSelected = props.a11yNumSelected,\n      emptyLabel = props.emptyLabel,\n      isMenuShown = props.isMenuShown,\n      results = props.results,\n      selected = props.selected; // If the menu is hidden, display info about the number of selections.\n\n  if (!isMenuShown) {\n    return a11yNumSelected(selected);\n  } // Display info about the number of matches.\n\n\n  if (results.length === 0) {\n    return emptyLabel;\n  }\n\n  return a11yNumResults(results);\n}\n\nvar _default = getAccessibilityStatus;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}