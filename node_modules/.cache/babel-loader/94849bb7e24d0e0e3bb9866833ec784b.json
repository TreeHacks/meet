{"ast":null,"code":"'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","map":{"version":3,"sources":["/Users/lucaspauker/projects/treehacks/meet/node_modules/shortid/lib/alphabet.js"],"names":["randomFromSeed","require","ORIGINAL","alphabet","previousSeed","shuffled","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","shuffle","sourceArray","targetArray","r","nextValue","characterIndex","Math","floor","push","splice","getShuffled","lookup","index","alphabetShuffled","get","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n"]},"metadata":{},"sourceType":"script"}