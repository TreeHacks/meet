{"ast":null,"code":"'use strict';\n\nvar urllib = require('url');\n\nmodule.exports.CookieJar = CookieJar;\n\nfunction CookieJar(options) {\n  this.options = options || {};\n  this.options.sessionTimeout = this.options.sessionTimeout || 1800; // 30min\n\n  this.cookies = {};\n}\n\nCookieJar.prototype.addCookie = function (cookie) {\n  if (!cookie || !cookie.name) {\n    return;\n  }\n\n  var lcookie;\n\n  if (!this.cookies[cookie.name]) {\n    this.cookies[cookie.name] = [];\n  } // overwrite if has same params\n\n\n  for (var i = 0, len = this.cookies[cookie.name].length; i < len; i++) {\n    lcookie = this.cookies[cookie.name][i];\n\n    if (lcookie.path === cookie.path && lcookie.domain === cookie.domain && lcookie.secure === cookie.secure && lcookie.httponly === cookie.httponly) {\n      this.cookies[cookie.name][i] = cookie;\n      return;\n    }\n  }\n\n  this.cookies[cookie.name].push(cookie);\n};\n\nCookieJar.prototype.getCookies = function (url) {\n  var keys = Object.keys(this.cookies),\n      cookie,\n      cookies = [];\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    if (Array.isArray(this.cookies[keys[i]])) {\n      for (var j = 0, lenj = this.cookies[keys[i]].length; j < lenj; j++) {\n        cookie = this.cookies[keys[i]][j];\n\n        if (this.matchCookie(cookie, url)) {\n          cookies.push(cookie.name + '=' + cookie.value);\n        }\n      }\n    }\n  }\n\n  return cookies.join('; ');\n};\n\nCookieJar.prototype.matchCookie = function (cookie, url) {\n  var urlparts = urllib.parse(url || '', false, true),\n      path; // check expire\n\n  if (cookie.expire) {\n    if (cookie.expire.getTime() < Date.now()) {\n      return;\n    }\n  } // check if hostname matches\n\n\n  if (urlparts.hostname && cookie._domain) {\n    if (!(urlparts.hostname === cookie._domain || urlparts.hostname.substr(-(cookie._domain.length + 1)) === '.' + cookie._domain)) {\n      return false;\n    }\n  } // check if path matches\n\n\n  if (cookie.path && urlparts.pathname) {\n    path = (urlparts.pathname || '/').split('/');\n    path.pop();\n    path = path.join('/').trim();\n\n    if (path.substr(0, 1) !== '/') {\n      path = '/' + path;\n    }\n\n    if (path.substr(-1) !== '/') {\n      path += '/';\n    }\n\n    if (path.substr(0, cookie.path.length) !== cookie.path) {\n      return false;\n    }\n  } // check secure\n\n\n  if (cookie.secure && urlparts.protocol) {\n    if (urlparts.protocol !== 'https:') {\n      return false;\n    }\n  } // check httponly\n\n\n  if (cookie.httponly && urlparts.protocol) {\n    if (urlparts.protocol !== 'http:') {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nCookieJar.prototype.setCookie = function (cookie_str, url) {\n  var parts = (cookie_str || '').split(';'),\n      cookie = {},\n      urlparts = urllib.parse(url || '', false, true),\n      path;\n  parts.forEach(function (part) {\n    var key, val;\n    part = part.split('=');\n    key = part.shift().trim();\n    val = part.join('=').trim();\n\n    if (!key) {\n      return;\n    }\n\n    switch (key.toLowerCase()) {\n      case 'expires':\n        cookie.expires = new Date(val);\n        break;\n\n      case 'path':\n        cookie.path = val.trim();\n        break;\n\n      case 'domain':\n        cookie.domain = val.toLowerCase();\n        break;\n\n      case 'max-age':\n        cookie.expires = new Date(Date.now() + (Number(val) || 0) * 1000);\n        break;\n\n      case 'secure':\n        cookie.secure = true;\n        break;\n\n      case 'httponly':\n        cookie.httponly = true;\n        break;\n\n      default:\n        if (!cookie.name) {\n          cookie.name = key;\n          cookie.value = val;\n        }\n\n    }\n  }.bind(this)); // use current path when path is not specified\n\n  if (!cookie.path) {\n    path = (urlparts.pathname || '/').split('/');\n    path.pop();\n    cookie.path = path.join('/').trim();\n\n    if (cookie.path.substr(0, 1) !== '/') {\n      cookie.path = '/' + cookie.path;\n    }\n\n    if (cookie.path.substr(-1) !== '/') {\n      cookie.path += '/';\n    }\n  } // if no expire date, then use sessionTimeout value\n\n\n  if (!cookie.expires) {\n    cookie._expires = new Date(Date.now() + (Number(this.options.sessionTimeout) || 0) * 1000);\n  } else {\n    cookie._expires = cookie.expires;\n  }\n\n  if (!cookie.domain) {\n    if (urlparts.hostname) {\n      cookie._domain = urlparts.hostname;\n    }\n  } else {\n    cookie._domain = cookie.domain;\n  }\n\n  this.addCookie(cookie);\n};","map":{"version":3,"sources":["/Users/lucaspauker/projects/treehacks/meet/node_modules/fetch/lib/cookiejar.js"],"names":["urllib","require","module","exports","CookieJar","options","sessionTimeout","cookies","prototype","addCookie","cookie","name","lcookie","i","len","length","path","domain","secure","httponly","push","getCookies","url","keys","Object","Array","isArray","j","lenj","matchCookie","value","join","urlparts","parse","expire","getTime","Date","now","hostname","_domain","substr","pathname","split","pop","trim","protocol","setCookie","cookie_str","parts","forEach","part","key","val","shift","toLowerCase","expires","Number","bind","_expires"],"mappings":"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","sourcesContent":["'use strict';\n\nvar urllib = require('url');\n\nmodule.exports.CookieJar = CookieJar;\n\nfunction CookieJar(options) {\n    this.options = options || {};\n    this.options.sessionTimeout = this.options.sessionTimeout || 1800; // 30min\n\n    this.cookies = {};\n}\n\nCookieJar.prototype.addCookie = function (cookie) {\n\n    if (!cookie || !cookie.name) {\n        return;\n    }\n\n    var lcookie;\n\n    if (!this.cookies[cookie.name]) {\n        this.cookies[cookie.name] = [];\n    }\n\n    // overwrite if has same params\n    for (var i = 0, len = this.cookies[cookie.name].length; i < len; i++) {\n        lcookie = this.cookies[cookie.name][i];\n        if (\n            lcookie.path === cookie.path &&\n            lcookie.domain === cookie.domain &&\n            lcookie.secure === cookie.secure &&\n            lcookie.httponly === cookie.httponly\n        ) {\n            this.cookies[cookie.name][i] = cookie;\n            return;\n        }\n    }\n\n    this.cookies[cookie.name].push(cookie);\n};\n\nCookieJar.prototype.getCookies = function (url) {\n    var keys = Object.keys(this.cookies),\n        cookie, cookies = [];\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n        if (Array.isArray(this.cookies[keys[i]])) {\n            for (var j = 0, lenj = this.cookies[keys[i]].length; j < lenj; j++) {\n                cookie = this.cookies[keys[i]][j];\n                if (this.matchCookie(cookie, url)) {\n                    cookies.push(cookie.name + '=' + cookie.value);\n                }\n            }\n        }\n    }\n    return cookies.join('; ');\n};\n\nCookieJar.prototype.matchCookie = function (cookie, url) {\n    var urlparts = urllib.parse(url || '', false, true),\n        path;\n\n    // check expire\n    if (cookie.expire) {\n        if (cookie.expire.getTime() < Date.now()) {\n            return;\n        }\n    }\n\n    // check if hostname matches\n    if (urlparts.hostname && cookie._domain) {\n        if (!(urlparts.hostname === cookie._domain || urlparts.hostname.substr(-(cookie._domain.length + 1)) === '.' + cookie._domain)) {\n            return false;\n        }\n    }\n\n    // check if path matches\n    if (cookie.path && urlparts.pathname) {\n\n        path = (urlparts.pathname || '/').split('/');\n        path.pop();\n        path = path.join('/').trim();\n        if (path.substr(0, 1) !== '/') {\n            path = '/' + path;\n        }\n        if (path.substr(-1) !== '/') {\n            path += '/';\n        }\n\n        if (path.substr(0, cookie.path.length) !== cookie.path) {\n            return false;\n        }\n    }\n\n    // check secure\n    if (cookie.secure && urlparts.protocol) {\n        if (urlparts.protocol !== 'https:') {\n            return false;\n        }\n    }\n\n    // check httponly\n    if (cookie.httponly && urlparts.protocol) {\n        if (urlparts.protocol !== 'http:') {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nCookieJar.prototype.setCookie = function (cookie_str, url) {\n    var parts = (cookie_str || '').split(';'),\n        cookie = {},\n        urlparts = urllib.parse(url || '', false, true),\n        path;\n\n    parts.forEach((function (part) {\n        var key, val;\n        part = part.split('=');\n        key = part.shift().trim();\n        val = part.join('=').trim();\n\n        if (!key) {\n            return;\n        }\n\n        switch (key.toLowerCase()) {\n\n            case 'expires':\n\n                cookie.expires = new Date(val);\n                break;\n\n            case 'path':\n                cookie.path = val.trim();\n                break;\n\n            case 'domain':\n                cookie.domain = val.toLowerCase();\n                break;\n\n            case 'max-age':\n                cookie.expires = new Date(Date.now() + (Number(val) || 0) * 1000);\n                break;\n\n            case 'secure':\n                cookie.secure = true;\n                break;\n\n            case 'httponly':\n                cookie.httponly = true;\n                break;\n\n            default:\n                if (!cookie.name) {\n                    cookie.name = key;\n                    cookie.value = val;\n                }\n        }\n    }).bind(this));\n\n    // use current path when path is not specified\n    if (!cookie.path) {\n        path = (urlparts.pathname || '/').split('/');\n        path.pop();\n        cookie.path = path.join('/').trim();\n        if (cookie.path.substr(0, 1) !== '/') {\n            cookie.path = '/' + cookie.path;\n        }\n        if (cookie.path.substr(-1) !== '/') {\n            cookie.path += '/';\n        }\n    }\n\n    // if no expire date, then use sessionTimeout value\n    if (!cookie.expires) {\n        cookie._expires = new Date(Date.now() + (Number(this.options.sessionTimeout) || 0) * 1000);\n    } else {\n        cookie._expires = cookie.expires;\n    }\n\n    if (!cookie.domain) {\n        if (urlparts.hostname) {\n            cookie._domain = urlparts.hostname;\n        }\n    } else {\n        cookie._domain = cookie.domain;\n    }\n\n    this.addCookie(cookie);\n};\n"]},"metadata":{},"sourceType":"script"}